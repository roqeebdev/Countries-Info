{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\n\nfunction createMotionComponent(_ref) {\n  let {\n    preloadedFeatures,\n    createVisualElement,\n    useRender,\n    useVisualState,\n    Component\n  } = _ref;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    /**\n     * If we need to measure the element we load this functionality in a\n     * separate class component in order to gain access to getSnapshotBeforeUpdate.\n     */\n    let MeasureLayout;\n    const configAndProps = { ...useContext(MotionConfigContext),\n      ...props,\n      layoutId: useLayoutId(props)\n    };\n    const {\n      isStatic\n    } = configAndProps;\n    const context = useCreateMotionContext(props);\n    /**\n     * Create a unique projection ID for this component. If a new component is added\n     * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n     * us to measure it as soon as any layout effect flushes pending layout animations.\n     *\n     * Performance note: It'd be better not to have to search the DOM for these elements.\n     * For newly-entering components it could be enough to only correct treeScale, in which\n     * case we could mount in a scale-correction mode. This wouldn't be enough for\n     * shared element transitions however. Perhaps for those we could revert to a root node\n     * that gets forceRendered and layout animations are triggered on its layout effect.\n     */\n\n    const projectionId = isStatic ? undefined : useProjectionId();\n    const visualState = useVisualState(props, isStatic);\n\n    if (!isStatic && isBrowser) {\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n      /**\n       * Load Motion gesture and animation features. These are rendered as renderless\n       * components so each feature can optionally make use of React lifecycle methods.\n       */\n\n      const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n      const isStrict = useContext(LazyContext).strict;\n\n      if (context.visualElement) {\n        MeasureLayout = context.visualElement.loadFeatures( // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n        configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n      }\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n\n\n    return React.createElement(MotionContext.Provider, {\n      value: context\n    }, MeasureLayout && context.visualElement ? React.createElement(MeasureLayout, {\n      visualElement: context.visualElement,\n      ...configAndProps\n    }) : null, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement));\n  }\n\n  const ForwardRefComponent = forwardRef(MotionComponent);\n  ForwardRefComponent[motionComponentSymbol] = Component;\n  return ForwardRefComponent;\n}\n\nfunction useLayoutId(_ref2) {\n  let {\n    layoutId\n  } = _ref2;\n  const layoutGroupId = useContext(LayoutGroupContext).id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n\nexport { createMotionComponent };","map":{"version":3,"names":["React","forwardRef","useContext","MotionConfigContext","MotionContext","useVisualElement","useMotionRef","useCreateMotionContext","loadFeatures","isBrowser","useProjectionId","LayoutGroupContext","LazyContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","context","projectionId","undefined","visualState","visualElement","initialLayoutGroupConfig","isStrict","strict","createElement","Provider","value","ForwardRefComponent","layoutGroupId","id"],"sources":["/Users/macbook/Downloads/country_details/node_modules/framer-motion/dist/es/motion/index.mjs"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,wBAAT,QAAyC,yCAAzC;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,OAAkH;EAAA,IAAnF;IAAEC,iBAAF;IAAqBC,mBAArB;IAA0CC,SAA1C;IAAqDC,cAArD;IAAqEC;EAArE,CAAmF;EAC9GJ,iBAAiB,IAAIR,YAAY,CAACQ,iBAAD,CAAjC;;EACA,SAASK,eAAT,CAAyBC,KAAzB,EAAgCC,WAAhC,EAA6C;IACzC;AACR;AACA;AACA;IACQ,IAAIC,aAAJ;IACA,MAAMC,cAAc,GAAG,EACnB,GAAGvB,UAAU,CAACC,mBAAD,CADM;MAEnB,GAAGmB,KAFgB;MAGnBI,QAAQ,EAAEC,WAAW,CAACL,KAAD;IAHF,CAAvB;IAKA,MAAM;MAAEM;IAAF,IAAeH,cAArB;IACA,MAAMI,OAAO,GAAGtB,sBAAsB,CAACe,KAAD,CAAtC;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,MAAMQ,YAAY,GAAGF,QAAQ,GAAGG,SAAH,GAAerB,eAAe,EAA3D;IACA,MAAMsB,WAAW,GAAGb,cAAc,CAACG,KAAD,EAAQM,QAAR,CAAlC;;IACA,IAAI,CAACA,QAAD,IAAanB,SAAjB,EAA4B;MACxB;AACZ;AACA;AACA;AACA;AACA;MACYoB,OAAO,CAACI,aAAR,GAAwB5B,gBAAgB,CAACe,SAAD,EAAYY,WAAZ,EAAyBP,cAAzB,EAAyCR,mBAAzC,CAAxC;MACA;AACZ;AACA;AACA;;MACY,MAAMiB,wBAAwB,GAAGhC,UAAU,CAACW,wBAAD,CAA3C;MACA,MAAMsB,QAAQ,GAAGjC,UAAU,CAACU,WAAD,CAAV,CAAwBwB,MAAzC;;MACA,IAAIP,OAAO,CAACI,aAAZ,EAA2B;QACvBT,aAAa,GAAGK,OAAO,CAACI,aAAR,CAAsBzB,YAAtB,EAChB;QACAiB,cAFgB,EAEAU,QAFA,EAEUnB,iBAFV,EAE6Bc,YAF7B,EAE2CI,wBAF3C,CAAhB;MAGH;IACJ;IACD;AACR;AACA;AACA;;;IACQ,OAAQlC,KAAK,CAACqC,aAAN,CAAoBjC,aAAa,CAACkC,QAAlC,EAA4C;MAAEC,KAAK,EAAEV;IAAT,CAA5C,EACJL,aAAa,IAAIK,OAAO,CAACI,aAAzB,GAA0CjC,KAAK,CAACqC,aAAN,CAAoBb,aAApB,EAAmC;MAAES,aAAa,EAAEJ,OAAO,CAACI,aAAzB;MAAwC,GAAGR;IAA3C,CAAnC,CAA1C,GAA6I,IADzI,EAEJP,SAAS,CAACE,SAAD,EAAYE,KAAZ,EAAmBQ,YAAnB,EAAiCxB,YAAY,CAAC0B,WAAD,EAAcH,OAAO,CAACI,aAAtB,EAAqCV,WAArC,CAA7C,EAAgGS,WAAhG,EAA6GJ,QAA7G,EAAuHC,OAAO,CAACI,aAA/H,CAFL,CAAR;EAGH;;EACD,MAAMO,mBAAmB,GAAGvC,UAAU,CAACoB,eAAD,CAAtC;EACAmB,mBAAmB,CAAC1B,qBAAD,CAAnB,GAA6CM,SAA7C;EACA,OAAOoB,mBAAP;AACH;;AACD,SAASb,WAAT,QAAmC;EAAA,IAAd;IAAED;EAAF,CAAc;EAC/B,MAAMe,aAAa,GAAGvC,UAAU,CAACS,kBAAD,CAAV,CAA+B+B,EAArD;EACA,OAAOD,aAAa,IAAIf,QAAQ,KAAKK,SAA9B,GACDU,aAAa,GAAG,GAAhB,GAAsBf,QADrB,GAEDA,QAFN;AAGH;;AAED,SAASX,qBAAT"},"metadata":{},"sourceType":"module"}